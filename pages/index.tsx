import type { NextPage } from "next"
import Head from "next/head"
import Background from "../components/Background"
import LoaderPage from "../components/LoaderPage"
import Menus from "../components/Menus"
import "react-loading-skeleton/dist/skeleton.css"
import { ProfileData } from "../types"
import { menus } from "../data"
import { AnimatePresence, motion } from "framer-motion"
import { useEffect, useState } from "react"
import { Toaster } from "react-hot-toast"
import WorkLb from "../components/worksPage/WorkLb"
import SideMenuLb from "../components/SideMenuLb"
import { BiMenu } from "react-icons/bi"
import Trigger from '../components/ViewportTrigger';

import MySlider from "../components/mySlider"

interface Props {
  profileData: ProfileData
}

interface workProps {
  id: number
  title: string,
  description: string,
  imageUrl: string,
  live: string,
  repo: string
  stacks: string[],
  features?: {
    title: string,
    description: string
  }[],
  challenge?: string
}

const Home: NextPage<Props> = () => {
  // const menuId = useReactiveVar(currentMenu)
  // const workId = useReactiveVar(currentWork)
  // const sideMenu = useReactiveVar(showMenu)
  const [loaderPage, setLoaderPage] = useState<boolean>(true)
  const [activePage, setActivePage] = useState(1);
  const [showWork, setShowWork] = useState(false);
  const [currentWork, setCurrentWork] = useState<number>(0);
  useEffect(() => {
    const timeoutId = setTimeout(() => setLoaderPage(false), 3000)
    return () => {
      clearTimeout(timeoutId)
    }
  }, [setLoaderPage])
  return (
    <main className="relative flex items-center justify-center min-h-screen home">
      <Trigger />
      <Head>
        <title>Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LoaderPage loaderPage={loaderPage} />


      <Background />

      {showWork &&
        <AnimatePresence>
          {<WorkLb id={currentWork} setShowWork={setShowWork} />}
        </AnimatePresence>
      }
      <button
        // onClick={() => showMenu(true)}
        className="fixed z-40 flex items-center justify-center text-white rounded-full top-6 right-6 w-14 h-14 bg-main-orange lg:hidden"
      >
        <BiMenu className="w-10 h-10" />
      </button>

      {/* <section className="z-10 w-full h-full lg:w-[115rem] xl:w-[126.8rem] lg:h-[62.5rem] lg:flex p-10 sm:p-24 lg:p-0">
        <ProfileCard profileData={profileData} />
      </section> */}
      <section className="flex items-center z-10">
        {/* <Menus showSideMenu={true} activePage={activePage} setActivePage={setActivePage} />*/}
        <div className="center">
          <MySlider setCurrentWork={setCurrentWork} setShowWork={setShowWork} loaderPage={loaderPage} data={menus} activeSlide={2} />
        </div>
      </section>
      <Toaster />
    </main>
  )
}

export async function getStaticProps() {
  return {
    props: {
      profileData: {
        id: "Cheng JunKai",
        cv: "",
        name: "Cheng JunKai",
        ownersPhoto: { url: "/images/pic4.png" },
        bgImages: [{ url: "/images/g-7.jpg" }, { url: "/images/g-9.jpg" }]
      },
    },
    revalidate: 3600,
  }
}

export default Home

import type { NextPage } from "next"
import Head from "next/head"
import Background from "../components/Background"
import LoaderPage from "../components/LoaderPage"
import Menus from "../components/Menus"
import ProfileCard from "../components/ProfileCard"
import "react-loading-skeleton/dist/skeleton.css"
import { ProfileData } from "../types"
import { menus } from "../data"
import { AnimatePresence, motion } from "framer-motion"
import { useEffect, useState } from "react"
import { Toaster } from "react-hot-toast"
import WorkLb from "../components/worksPage/WorkLb"
import SideMenuLb from "../components/SideMenuLb"
import { BiMenu } from "react-icons/bi"
import Trigger from '../components/ViewportTrigger';

import MySlider from "../components/mySlider"

interface Props {
  profileData: ProfileData
}


const data = [
  {
    id: 1,
    bgColor: "#F54748",
    title: "Lorem Ipsum",
    desc:
      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
  },
  {
    id: 2,
    bgColor: "#7952B3",
    title: "Lorem Ipsum",
    desc:
      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
  },
  {
    id: 3,
    bgColor: "#1597BB",
    title: "Lorem Ipsum",
    desc:
      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
  },
  {
    id: 4,
    bgColor: "#185ADB",
    title: "Lorem Ipsum",
    desc:
      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
  },
  {
    id: 5,
    bgColor: "#FF616D",
    title: "Lorem Ipsum",
    desc:
      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
  }
];




const clipPaths = [
  "polygon(0 50%, 100% 50%, 100% 50%, 0 50%)",
  "polygon(50% 0, 50% 0, 50% 100%, 50% 100%)",
]

const Home: NextPage<Props> = ({ profileData }) => {
  // const menuId = useReactiveVar(currentMenu)
  // const workId = useReactiveVar(currentWork)
  // const sideMenu = useReactiveVar(showMenu)
  const [loaderPage, setLoaderPage] = useState<boolean>(true)
  const [activePage, setActivePage] = useState(1);
  useEffect(() => {
    const timeoutId = setTimeout(() => setLoaderPage(false), 100)
    return () => {
      clearTimeout(timeoutId)
    }
  }, [setLoaderPage])

  return (
    <main className="relative flex items-center justify-center min-h-screen home">
      <Trigger />
      <Head>
        <title>Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {loaderPage && <LoaderPage />}

      <Background />

      <AnimatePresence>
        {/* {<WorkLb />} */}
      </AnimatePresence>

      {/* <SideMenuLb
        profile={profileData}
      // sideMenu={sideMenu}
      // showMenu={showMenu}
      /> */}

      <button
        // onClick={() => showMenu(true)}
        className="fixed z-40 flex items-center justify-center text-white rounded-full top-6 right-6 w-14 h-14 bg-main-orange lg:hidden"
      >
        <BiMenu className="w-10 h-10" />
      </button>

      {/* <section className="z-10 w-full h-full lg:w-[115rem] xl:w-[126.8rem] lg:h-[62.5rem] lg:flex p-10 sm:p-24 lg:p-0">
        <ProfileCard profileData={profileData} />
      </section> */}
      <section className="flex items-center">
        {/* <Menus showSideMenu={true} activePage={activePage} setActivePage={setActivePage} />*/}
        <div className="center">
          <MySlider data={menus} activeSlide={2} />
        </div>
      </section>
      <Toaster />
    </main>
  )
}

export async function getStaticProps() {
  return {
    props: {
      profileData: {
        id: "Cheng JunKai",
        cv: "",
        name: "Cheng JunKai",
        ownersPhoto: { url: "/images/pic4.png" },
        bgImages: [{ url: "/images/g-7.jpg" }, { url: "/images/g-9.jpg" }]
      },
    },
    revalidate: 3600,
  }
}

export default Home
